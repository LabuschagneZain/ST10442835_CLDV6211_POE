@model IEnumerable<ManagerApp.Models.Event>
@using Microsoft.AspNetCore.Mvc.Rendering
@using ManagerApp.Models

@{
    ViewData["Title"] = "Events";
}

<h1 style="color: white;">Events</h1>

<!-- Alerts -->
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Create Button -->
<p>
    <a asp-action="Create" class="btn btn-primary">Create New Event</a>
</p>

<!-- Filter Form -->
<form method="get" class="mb-4">
    <div class="row">
        <!-- Event Type -->
        <div class="col-md-3">
            <label class="form-label text-dark" for="eventTypeId">Event Type</label>
            <select id="eventTypeId" name="eventTypeId" class="form-control" asp-items="ViewBag.EventTypes">
                <option value="">-- All Types --</option>
            </select>
        </div>

        <!-- Venue -->
        <div class="col-md-3">
            <label class="form-label text-dark" for="venueId">Venue</label>
            <select id="venueId" name="venueId" class="form-control" asp-items="ViewBag.Venues">
                <option value="">-- All Venues --</option>
            </select>
        </div>

        <!-- Start Date -->
        <div class="col-md-3">
            <label class="form-label text-dark" for="startDate">Start Date</label>
            <input type="date" id="startDate" name="startDate" class="form-control" value="@Context.Request.Query["startDate"]" />
        </div>

        <!-- End Date -->
        <div class="col-md-3">
            <label class="form-label text-dark" for="endDate">End Date</label>
            <input type="date" id="endDate" name="endDate" class="form-control" value="@Context.Request.Query["endDate"]" />
        </div>
    </div>

    <div class="mt-3">
        <button type="submit" class="btn btn-primary">Filter</button>
        <a href="/Event/Index" class="btn btn-secondary ms-2">Clear</a>
    </div>
</form>

<!-- Events Table -->
<table class="table table-bordered table-hover table-dark">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.First().EventName)</th>
            <th>@Html.DisplayNameFor(model => model.First().EventDate)</th>
            <th>@Html.DisplayNameFor(model => model.First().Description)</th>
            <th>Venue</th>
            <th>Event Type</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (!Model.Any())
        {
            <tr>
                <td colspan="6" class="text-center text-white">No events found.</td>
            </tr>
        }
        else
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>@item.EventName</td>
                    <td>@item.EventDate.ToString("dd MMM yyyy HH:mm")</td>
                    <td>@item.Description</td>
                    <td>@item.Venue?.VenueName</td>
                    <td>@item.EventType?.TypeName</td>
                    <td>
                        <a class="btn btn-sm btn-success" asp-action="Details" asp-route-id="@item.EventId">Details</a> |
                        <a class="btn btn-sm btn-warning" asp-action="Edit" asp-route-id="@item.EventId">Edit</a> |
                        <a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@item.EventId">Delete</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
